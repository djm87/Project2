Module Initialize
CONTAINS
!Launching a three dimensional grid of 216 theads
attributes(global) SUBROUTINE Initialize(C6P6A,C6A,SSYSMAT,NC,NSLIP)

 
    IMPLICIT NONE
	INTEGER, VALUE ::	NC, NSLIP
    REAL(8), DEVICE :: C6P6A(NSLIP,6,NC),C6A(NSLIP,6,NC),SSYSMAT(NSLIP,9,NC)
    INTEGER :: tx,ty,tz,by,bz,IC
	REAL(8), SHARED :: S_SSYS(12,9),S_C6A(12,6)
	
	tx = threadidx%x !will be 1-12?
	ty = threadidx%y !will be 1-6?
	tz = threadidx%z !will be 1-4?
	by = blockdim%z  !will be 4

	IC = (blockIdx%z-1)*bz+tz
	
	!Read in SSYSMAT to shared memory 

		S_SSYS(tx,1) = SSYSMAT(tx,1,IC)
		S_SSYS(tx,7) = SSYSMAT(tx,2,IC)
		S_SSYS(tx,9) = SSYSMAT(tx,3,IC)
		S_SSYS(tx,4) = SSYSMAT(tx,1,IC)
		S_SSYS(tx,2) = SSYSMAT(tx,2,IC)	
		S_SSYS(tx,8) = SSYSMAT(tx,3,IC)
		S_SSYS(tx,6) = SSYSMAT(tx,1,IC)
		S_SSYS(tx,5) = SSYSMAT(tx,2,IC)
		S_SSYS(tx,3) = SSYSMAT(tx,3,IC)

		S_C6A(tx,ty) = C6A(tx,ty,IC)
		!S_C6A(tx,1) = C6A(tx,1,IC)
		!S_C6A(tx,2) = C6A(tx,2,IC)
		!S_C6A(tx,3) = C6A(tx,3,IC)
		!S_C6A(tx,4) = C6A(tx,4,IC)
		!S_C6A(tx,5) = C6A(tx,5,IC)
		!S_C6A(tx,6) = C6A(tx,6,IC)
		
		C6P6A(tx,1,IC) = S_C6A(tx,1)*S_SSYS(tx,1)	
		C6P6A(tx,2,IC) = S_C6A(tx,2)*S_SSYS(tx,2)	
		C6P6A(tx,3,IC) = S_C6A(tx,3)*S_SSYS(tx,3)	
		C6P6A(tx,4,IC) = S_C6A(tx,4)*S_SSYS(tx,4)+S_SSYS(tx,7) 
		C6P6A(tx,5,IC) = S_C6A(tx,5)*S_SSYS(tx,5)+S_SSYS(tx,8)
		C6P6A(tx,6,IC) = S_C6A(tx,6)*S_SSYS(tx,6)+S_SSYS(tx,9)

	RETURN

END SUBROUTINE Initialize
END Module Initialize

program main
  use Initialize
  use cudafor
  INTEGER, PARAMETER :: NC = 1024, NREPS = 1000
  INTEGER, PARAMETER :: NSLIP = 12

  ! matrix data
  REAL(8):: Atemp(N,N), btemp(N)
  REAL(8), ALLOCATABLE, PINNED ::C6A(:,:,:),SSYSMAT(:,:,:), C6P6A(:,:,:)
  REAL(8), ALLOCATABLE, DEVICE :: dC6A(:,:,:),dSSYSMAT(:,:,:), dC6P6A(:,:,:)
  type(cudaEvent) :: start, stop
  type(dim3) :: blocks
  type(dim3) :: threads
 
  blocks = dim3(NC,1,1)
  threads = dim3(12,6,1) 

  
  istat = cudaEventCreate(start)
  istat = cudaEventCreate(stop)
  
  ALLOCATE(C6P6A(NSLIP,6,NC),C6A(NSLIP,6,NC),SSYSMAT(NSLIP,9,NC)) 
  ALLOCATE(dC6P6A(NSLIP,6,NC),dC6A(NSLIP,6,NC),dSSYSMAT(NSLIP,9,NC))

  DO K = 1,NC 
	 DO KK = 1,9

			DO KKK= 1,NSLIP
				SSYSMAT(KKK,KK,K) = 5222		

		END DO
	 END DO
  END DO
  
   DO K = 1,NC 
	 DO KK = 1,6
		DO KKK= 1,NSLIP
			C6A(KKK,KK,K) = 1020
		END DO
	 END DO
   END DO

  dC6A = C6A
  dSSYSMAT=SSYSMAT

  time = 0.d0
   call Initialize<<<blocks, threads>>>(dC6P6A,dC6A,dSSYSMAT,NC,NSLIP)
  istat = cudaEventRecord(start, 0)
  do j = 1, NREPS
     call Initialize<<<blocks, threads>>>(dC6P6A,dC6A,dSSYSMAT,NC,NSLIP)
  end do
  istat = cudaEventRecord(stop, 0)    
  istat = cudaDeviceSynchronize()
  istat = cudaEventElapsedTime(time, start, stop)
  time = time / 1.0d3
  print*,"time = ", time, "NREPS = ", NREPS

  C6P6A =dC6P6A
  print *,"C6P6A = ", C6P6A(9,6,1)

  gflops = 9.d0*REAL(NSLIP)*REAL(NC)*REAL(NREPS)/time/1d9
  write (*,901) gflops
  901 format(f10.3,' GFlops/s')
  
  DEALLOCATE(C6P6A,C6A,SSYSMAT) 
  DEALLOCATE(dC6P6A,dC6A,dSSYSMAT)
end program
